---
import Layout from '@/layouts/Layout.astro';
import Banner from '@/components/Banner.astro';
// Jugadores
import Portrait from '@/components/characters/Portrait.astro';
import Experience from '@/components/characters/players/Experience.astro';
import Stats from '@/components/characters/Stats.astro';
import Movement from '@/components/characters/Movement.astro';
import Iniciative from '@/components/characters/players/mini/Iniciative.astro';
import Inspiration from '@/components/characters/players/mini/Inspiration.astro';
import Health from '@/components/characters/Health.astro';
import Comp from '@/components/characters/players/mini/Comp.astro';
// DB
import { db, eq, Jugadores, Razas, Clases } from 'astro:db';
import HitDice from '@/components/characters/HitDice.astro';
import HealthTable from '@/components/characters/players/HealthTable.astro';
import ArmorClass from '@/components/characters/ArmorClass.astro';

export async function getStaticPaths() {
  const jugadores = await db.select().from(Jugadores);

  return jugadores.map((jugador) => ({
    params: { playerId: jugador.id.toString() },
  }));
}
// Extrae playerId (string) de los params
const { playerId } = Astro.params;

// Convierte a número para que coincida con el tipo de Jugadores.id
const idNum = Number(playerId);

// Ejecuta la consulta y destruye el array al instante
const [chosen] = await db
  .select()
  .from(Jugadores)
  .where(eq(Jugadores.id, idNum));

// Ahora 'chosen' es tu jugador, o 'undefined' si no hay coincidencias

const raza = await db.select().from(Razas).where(eq(Razas.nombre, chosen.raza));
const raceChosen = raza[0];

const clase = await db
  .select()
  .from(Clases)
  .where(eq(Clases.nombre, chosen.clase));
const classChosen = clase[0];
---

<Layout>
  <Banner text={chosen.nombre} />
  <hr id='info' class='invisible absolute -mt-[2cm] z-0' />
  <main class='main h-[200vh]'>
    <article class='tabs flex justify-around gap-8 mb-4 p-4 sticky top-[2cm]'>
      <a href='#info'>
        <h2>Estadisticas</h2>
      </a>
      <a href='#backpack'>
        <h2>Inventario</h2>
      </a>
      <a href=''>
        <h2>Historia</h2>
      </a>
    </article>
    <!-- MAIN -->
    <article
      class='grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 lg:grid-cols-12 gap-4'
    >
      <!-- Full‑width en móvil, 12 cols en lg -->
      <section class='col-span-1 lg:col-span-12 uppercase'>
        <Experience
          exp={Number(chosen.experiencia)}
          race={chosen.raza}
          role={chosen.clase}
        />
      </section>

      <!-- Full‑width en móvil, 2 cols en md/lg -->
      <section class='col-span-1 md:col-span-2 lg:col-span-2'>
        <Comp />
      </section>
      <section class='col-span-1 md:col-span-2 lg:col-span-2'>
        <Iniciative />
      </section>

      <!-- Imagen y stats: full‑width móvil, 4 cols en md, 4 cols en lg -->
      <section class='col-span-1 md:col-span-4 lg:col-span-4 row-span-4'>
        <Portrait name={chosen.nombre.split(' ')[0]} />
      </section>
      <section class='col-span-1 md:col-span-4 lg:col-span-4 row-span-4'>
        <Stats />
      </section>

      <!-- Speed & ArmorClass: full‑width móvil, 4 cols en md, 4 cols en lg -->
      <section class='col-span-1 md:col-span-4 lg:col-span-4'>
        <Movement />
      </section>
      <section class='col-span-1 md:col-span-4 lg:col-span-4'>
        <ArmorClass />
      </section>

      <!-- Inspiration & HitDice: full‑width móvil, 2 cols en md/​lg -->
      <section class='col-span-1 md:col-span-2 lg:col-span-2'>
        <Inspiration />
      </section>
      <section class='col-span-1 md:col-span-2 lg:col-span-2'>
        <HitDice />
      </section>

      <!-- Health & HealthTable: full‑width siempre -->
      <section class='col-span-1 lg:col-span-12'>
        <Health />
      </section>
      <section class='col-span-1 lg:col-span-12'>
        <HealthTable />
      </section>
    </article>
  </main>

  <style>
    /* Debug Mode */
    /* * {
    border: solid 1px var(--white);
  } */
    /* Sections */
    .tabs {
      background-color: var(--black);
      border-radius: 0.5rem;
    }
    .tabs a {
      box-shadow: var(--shadow);
      padding: 1rem;
      width: 100%;

      font-family: var(--title);
      text-transform: uppercase;
    }
    .tabs a:hover {
      box-shadow: var(--shadow-pressed-theme);
      background-color: var(--theme);
    }
    /* Article */
  </style>
</Layout>
